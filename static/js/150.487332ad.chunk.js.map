{"version":3,"file":"static/js/150.487332ad.chunk.js","mappings":"mPAEaA,EAAYC,EAAAA,GAAAA,IAAH,8CAITC,EAAaD,EAAAA,GAAAA,GAAH,2FAOVE,EAAaF,EAAAA,GAAAA,GAAH,yC,SCiCvB,EAzCa,WACX,OAAgCG,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAYM,EAASC,KACtB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,GACJ,GAAE,CAACR,KAGF,SAACP,EAAD,UACGK,EAASa,OAAS,IACjB,SAAChB,EAAD,UACGG,EAASc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACZ,UAACpB,EAAD,YACE,gBACEqB,IACEF,EAAY,yCAC0BA,GAClC,iFAENG,MAAO,IACPC,OAAQ,IACRC,QAAQ,OACRC,IAAI,YAEN,6BAAKP,EAAL,QACA,wCAAgBE,OAbDH,EADL,OAqBvB,C,+LC1CDS,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,UAHR,qBAGQ,oBAAiCC,IAD/B,cACnBlB,EADmB,yBAElBA,EAASoB,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCI,EADnC,gCADG,cACpBtB,EADoB,yBAInBA,EAASoB,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMf,GAAN,uFACNS,EAAAA,EAAAA,IAAA,gBACZT,EADY,oBACEU,EADF,oBADM,cACvBlB,EADuB,yBAItBA,EAASoB,MAJa,2CAAH,sDAOftB,EAAe,mCAAG,WAAMU,GAAN,uFACNS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUU,EADV,oBADM,cACvBlB,EADuB,yBAItBA,EAASoB,MAJa,2CAAH,sDAOfI,EAAU,mCAAG,WAAMhB,GAAN,uFACDS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUU,EADV,2BADC,cAClBlB,EADkB,yBAIjBA,EAASoB,MAJQ,2CAAH,qD","sources":["components/Cast.slyled.js","components/Cast.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0px 24px;\n`;\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n`;\n\nexport const ActorsCard = styled.li`\n  width: 300px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'services/api';\nimport { Container, ActorsList, ActorsCard } from './Cast.slyled';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(response => {\n        setCastInfo(response.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <Container>\n      {castInfo.length > 0 && (\n        <ActorsList>\n          {castInfo.map(({ id, name, profile_path, character }) => (\n            <ActorsCard key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                    : 'https://img.freepik.com/free-vector/images-concept-illustration_114360-218.jpg'\n                }\n                width={200}\n                height={300}\n                loading=\"lazy\"\n                alt=\"poster\"\n              />\n              <b> {name} </b>\n              <p>Character : {character}</p>\n            </ActorsCard>\n          ))}\n        </ActorsList>\n      )}\n    </Container>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0133cbd46d7aed15aba1a7c05914842d';\nconst TRENDING = 'trending/movie/day';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`${TRENDING}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["Container","styled","ActorsList","ActorsCard","useState","castInfo","setCastInfo","movieId","useParams","useEffect","getMovieCredits","then","response","cast","catch","error","console","log","length","map","id","name","profile_path","character","src","width","height","loading","alt","axios","API_KEY","getTrending","data","searchMovies","query","getMovieDetails","getReviews"],"sourceRoot":""}