{"version":3,"file":"static/js/266.f4f0bcf4.chunk.js","mappings":"2LAGaA,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnC,OACE,wBACGD,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAA1C,SACGG,KAFID,EADC,KASjB,C,uFCqBD,UA/Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACMV,GAAWW,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACRF,GAAa,IACbG,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJP,EAAUO,EAASC,QACpB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,QAAQX,GAAa,GACzB,GAAE,KAGD,gCACGD,IAAa,yCAEbV,EAAOuB,OAAS,IACf,iCACE,4CACA,SAAC,IAAD,CAAYvB,OAAQA,EAAQC,SAAUA,SAK/C,C,+LChCDuB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGHX,EAAW,mCAAG,oGACFU,EAAAA,EAAAA,IAAA,UAHR,qBAGQ,oBAAiCC,IAD/B,cACnBT,EADmB,yBAElBA,EAASU,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCG,EADnC,gCADG,cACpBZ,EADoB,yBAInBA,EAASU,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAM1B,GAAN,uFACNqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,oBACEsB,EADF,oBADM,cACvBT,EADuB,yBAItBA,EAASU,MAJa,2CAAH,sDAOfI,EAAe,mCAAG,WAAM3B,GAAN,uFACNqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,4BACUsB,EADV,oBADM,cACvBT,EADuB,yBAItBA,EAASU,MAJa,2CAAH,sDAOfK,EAAU,mCAAG,WAAM5B,GAAN,uFACDqB,EAAAA,EAAAA,IAAA,gBACZrB,EADY,4BACUsB,EADV,2BADC,cAClBT,EADkB,yBAIjBA,EAASU,MAJQ,2CAAH,qD","sources":["components/MoviesList.js","pages/Home.js","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      title: propTypes.string.isRequired,\n    })\n  ),\n  location: propTypes.object,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrending } from 'services/api';\nimport { MoviesList } from 'components/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrending()\n      .then(response => {\n        setMovies(response.results);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {isLoading && <div>LOADING ...</div>}\n\n      {movies.length > 0 && (\n        <>\n          <h1>Trending today</h1>\n          <MoviesList movies={movies} location={location} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0133cbd46d7aed15aba1a7c05914842d';\nconst TRENDING = 'trending/movie/day';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`${TRENDING}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["MoviesList","movies","location","map","id","title","to","state","from","useState","setMovies","isLoading","setIsLoading","useLocation","useEffect","getTrending","then","response","results","catch","error","console","log","finally","length","axios","API_KEY","data","searchMovies","query","getMovieDetails","getMovieCredits","getReviews"],"sourceRoot":""}